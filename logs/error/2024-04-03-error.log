{"level":"error","message":"Error Status: undefined, Message: worryRepository.findOldWorriesWithoutComments is not a function","timestamp":"2024-04-02T15:32:58.850Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.findUnique()` invocation:\n\n{\n  where: {\n    worryId: undefined,\n?   solvingCommentId?: Int,\n?   AND?: WorriesWhereInput | WorriesWhereInput[],\n?   OR?: WorriesWhereInput[],\n?   NOT?: WorriesWhereInput | WorriesWhereInput[],\n?   commentAuthorId?: IntFilter | Int,\n?   content?: StringFilter | String,\n?   fontColor?: StringNullableFilter | String | Null,\n?   createdAt?: DateTimeFilter | DateTime,\n?   icon?: EnumIconNullableFilter | Icon | Null,\n?   lastReplyTime?: DateTimeNullableFilter | DateTime | Null,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   isSolved?: BoolFilter | Boolean,\n?   isReWorry?: BoolFilter | Boolean,\n?   userId?: IntNullableFilter | Int | Null,\n?   user?: UsersNullableRelationFilter | UsersWhereInput | Null,\n?   comments?: CommentsListRelationFilter,\n?   solvingComment?: CommentsNullableRelationFilter | CommentsWhereInput | Null\n  },\n  select: {\n    deletedAt: true,\n    userId: true,\n    commentAuthorId: true\n  }\n}\n\nArgument `where` of type WorriesWhereUniqueInput needs at least one of `worryId` or `solvingCommentId` arguments. Available options are marked with ?.","timestamp":"2024-04-02T15:33:51.574Z"}
{"level":"error","message":"Error Status: undefined, Message: worryRepository.findOldWorriesWithoutComments is not a function","timestamp":"2024-04-02T15:39:48.487Z"}
