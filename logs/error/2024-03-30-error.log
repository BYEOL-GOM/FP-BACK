
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-29T16:19:46.579Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-29T23:53:27.029Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-29T23:53:27.556Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.findFirst()` invocation:\n\n{\n  where: {\n    userChekId: 3413556301\n                ~~~~~~~~~~\n  }\n}\n\nArgument `userChekId`: Invalid value provided. Expected StringFilter or String, provided Int.","timestamp":"2024-03-29T23:57:58.290Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: undefined,\n  nick: \"정재훈\",\n  ~~~~\n  snsId: 3413556301,\n  provider: \"kakao\",\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `nick`. Available options are marked with ?.","timestamp":"2024-03-30T00:01:06.557Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: undefined,\n  nickname: \"정재훈\",\n  ~~~~~~~~\n  userChekId: \"3413556301\",\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `nickname`. Available options are marked with ?.","timestamp":"2024-03-30T00:05:15.849Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: undefined,\n  nickname: undefined,\n  userChekId: \"3413556301\",\n  ~~~~~~~~~~\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `userChekId`. Available options are marked with ?.","timestamp":"2024-03-30T00:07:31.788Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: undefined,\n  nickname: undefined,\n  userChekId: \"3413556301\",\n  ~~~~~~~~~~\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `userChekId`. Available options are marked with ?.","timestamp":"2024-03-30T00:10:16.602Z"}
{"level":"error","message":"Error Status: undefined, Message: kakaoProfile is not defined","timestamp":"2024-03-30T00:15:25.606Z"}
{"level":"error","message":"Error Status: undefined, Message: kakaoProfile is not defined","timestamp":"2024-03-30T02:01:12.874Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: \"01083066699a@gmail.com\",\n  ~~~~~\n  nickname: \"정재훈\",\n  userChekId: \"3413556301\",\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `email`. Available options are marked with ?.","timestamp":"2024-03-30T02:05:35.015Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: \"01083066699a@gmail.com\",\n  ~~~~~\n  nickname: \"정재훈\",\n  userChekId: \"3413556301\",\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `email`. Available options are marked with ?.","timestamp":"2024-03-30T02:08:52.342Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: \"01083066699a@gmail.com\",\n  ~~~~~\n  nickname: \"정재훈\",\n  userChekId: \"3413556301\",\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `email`. Available options are marked with ?.","timestamp":"2024-03-30T02:09:03.859Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.users.create()` invocation:\n\n{\n  email: \"01083066699a@gmail.com\",\n  ~~~~~\n  nickname: \"정재훈\",\n  userChekId: \"3413556301\",\n? data?: UsersCreateInput | UsersUncheckedCreateInput\n}\n\nUnknown argument `email`. Available options are marked with ?.","timestamp":"2024-03-30T02:16:43.001Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-30T02:20:35.961Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-30T02:31:36.869Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-30T02:32:09.762Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-30T02:37:29.137Z"}
{"level":"error","message":"Error Status: undefined, Message: secretOrPrivateKey must have a value","timestamp":"2024-03-30T03:04:20.066Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-30T03:16:07.280Z"}
{"level":"error","message":"Error Status: undefined, Message: Failed to serialize user into session","timestamp":"2024-03-30T04:45:03.130Z"}
{"level":"error","message":"Error Status: undefined, Message: Failed to deserialize user out of session","timestamp":"2024-03-30T04:46:04.966Z"}
{"level":"error","message":"Error Status: undefined, Message: jwt is not defined","timestamp":"2024-03-30T04:48:23.926Z"}
{"level":"error","message":"Error Status: undefined, Message: Users is not defined","timestamp":"2024-03-30T04:49:51.328Z"}
{"level":"error","message":"Error Status: undefined, Message: secretOrPrivateKey must have a value","timestamp":"2024-03-30T05:18:48.808Z"}
{"level":"error","message":"Error Status: undefined, Message: jwt must be a string","timestamp":"2024-03-30T05:20:01.862Z"}
{"level":"error","message":"Error Status: undefined, Message: Unknown authentication strategy \"kakao\"","timestamp":"2024-03-30T05:21:03.757Z"}
{"level":"error","message":"Error Status: undefined, Message: Unknown authentication strategy \"kakao\"","timestamp":"2024-03-30T05:21:04.870Z"}
{"level":"error","message":"Error Status: undefined, Message: Login sessions require session support. Did you forget to use `express-session` middleware?","timestamp":"2024-03-30T05:24:52.377Z"}

{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.findUnique()` invocation:\n\n{\n  where: {\n    worryId: \"46\"\n             ~~~~\n  },\n  select: {\n    worryId: true,\n    content: true,\n    createdAt: true,\n    icon: true,\n    userId: true,\n    comments: {\n      select: {\n        commentId: true,\n        content: true,\n        createdAt: true,\n        updatedAt: true,\n        parentId: true,\n        children: {\n          select: {\n            commentId: true,\n            content: true,\n            createdAt: true,\n            updatedAt: true,\n            parentId: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `worryId`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-03-29T15:50:24.522Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:30:32.136Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:30:37.050Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:30:42.925Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `solvingCommentId`","timestamp":"2024-03-29T17:30:57.190Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:32:42.003Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:32:45.585Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:32:49.877Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:33:22.144Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:38:29.538Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:39:39.166Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:40:29.586Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n{\n  where: {\n    worryId: 8\n  },\n  data: {\n    isSolved: true,\n    solvingCommentId: 9,\n    solvedByUserId: 1,\n    helperUserId: 3,\n+   user: {\n+     create: UsersCreateWithoutLikesInput | UsersUncheckedCreateWithoutLikesInput,\n+     connectOrCreate: UsersCreateOrConnectWithoutLikesInput,\n+     connect: UsersWhereUniqueInput\n+   }\n  },\n  select: {\n    worryId: true,\n    commentAuthorId: true,\n    content: true,\n    createdAt: true,\n    icon: true,\n    userId: true,\n    solvingCommentId: true\n  }\n}\n\nArgument `user` is missing.","timestamp":"2024-03-30T02:09:23.908Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T02:18:05.276Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T02:18:06.737Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `solvingCommentId`","timestamp":"2024-03-30T02:30:01.493Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `solvingCommentId`","timestamp":"2024-03-30T02:30:51.618Z"}
{"level":"error","message":"Error Status: 400, Message: 유효하지 않은 댓글입니다.","timestamp":"2024-03-30T02:42:39.798Z"}
{"level":"error","message":"Error Status: 400, Message: 유효하지 않은 댓글입니다.","timestamp":"2024-03-30T02:42:46.055Z"}
{"level":"error","message":"Error Status: undefined, Message: Failed to fetch comments: \nInvalid `prisma.comments.findFirst()` invocation:\n\n{\n  where: {\n+   commentId: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  select: {\n    worryId: true,\n    commentId: true,\n    content: true,\n    createdAt: true\n  }\n}\n\nArgument `commentId` is missing.","timestamp":"2024-03-30T03:20:00.475Z"}
{"level":"error","message":"Error Status: undefined, Message: Failed to fetch comments: Failed to fetch comments from repository: \nInvalid `prisma.worries.findMany()` invocation:\n\n{\n  where: {\n+   userId: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  select: {\n    worryId: true\n  }\n}\n\nArgument `userId` is missing.","timestamp":"2024-03-30T03:20:21.722Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T03:22:36.000Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T03:22:50.904Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T03:22:53.783Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T04:31:36.533Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n{\n  where: {\n    worryId: 49\n  },\n  data: {\n    isSolved: true,\n    solvingCommentId: 16,\n    ~~~~~~~~~~~~~~~~\n    solvedByUserId: 1,\n    helperUserId: 10,\n?   commentAuthorId?: Int | IntFieldUpdateOperationsInput,\n?   content?: String | StringFieldUpdateOperationsInput,\n?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n?   icon?: Icon | NullableEnumIconFieldUpdateOperationsInput | Null,\n?   lastReplyTime?: DateTime | NullableDateTimeFieldUpdateOperationsInput | Null,\n?   deletedAt?: DateTime | NullableDateTimeFieldUpdateOperationsInput | Null,\n?   user?: UsersUpdateOneWithoutSolvedWorriesNestedInput,\n?   helperUser?: UsersUpdateOneWithoutHelpedSolveWorriesNestedInput,\n?   comments?: CommentsUpdateManyWithoutWorryNestedInput,\n?   solvingComment?: CommentsUpdateOneWithoutSolvingWorryNestedInput\n  },\n  select: {\n    worryId: true,\n    commentAuthorId: true,\n    content: true,\n    createdAt: true,\n    icon: true,\n    userId: true,\n    solvingCommentId: true\n  }\n}\n\nUnknown argument `solvingCommentId`. Did you mean `solvingComment`? Available options are marked with ?.","timestamp":"2024-03-30T04:33:01.477Z"}
{"level":"error","message":"Error Status: undefined, Message: ReworryService is not defined","timestamp":"2024-03-30T07:03:00.555Z"}
{"level":"error","message":"Error Status: undefined, Message: ReworryService is not defined","timestamp":"2024-03-30T07:03:04.108Z"}
{"level":"error","message":"Error Status: undefined, Message: ReworryService is not defined","timestamp":"2024-03-30T07:04:10.113Z"}
{"level":"error","message":"Error Status: undefined, Message: 고민 등록 실패랜덤 답변자 선정 실패: 회원가입한 유저가 없습니다.","timestamp":"2024-03-30T07:38:42.157Z"}
{"level":"error","message":"Error Status: undefined, Message: 고민 등록 실패고민등록에 실패하였습니다. \nInvalid `prisma.worries.create()` invocation:\n\n{\n  data: {\n    content: \"concern\",\n    icon: \"B\",\n    userId: 1,\n    commentAuthorId: 2,\n+   commentId: Int\n  }\n}\n\nArgument `commentId` is missing.","timestamp":"2024-03-30T07:38:56.008Z"}

{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T09:57:23.189Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T09:57:26.651Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `userId`","timestamp":"2024-03-30T10:06:36.336Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `userId`","timestamp":"2024-03-30T10:07:09.491Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `userId`","timestamp":"2024-03-30T10:09:59.293Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T10:10:14.068Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T10:13:40.569Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T10:13:41.382Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T10:13:41.798Z"}
{"level":"error","message":"Error Status: 403, Message: 선물을 보낼 권한이 없습니다. 게시글의 작성자만 선물을 보낼 수 있습니다.","timestamp":"2024-03-30T10:22:42.392Z"}
{"level":"error","message":"Error Status: 403, Message: 선물을 보낼 권한이 없습니다. 게시글의 작성자만 선물을 보낼 수 있습니다.","timestamp":"2024-03-30T10:22:45.884Z"}
{"level":"error","message":"Error Status: 400, Message: Expected ',' or '}' after property value in JSON at position 19","timestamp":"2024-03-30T10:32:16.887Z"}
{"level":"error","message":"Error Status: 400, Message: Expected ',' or '}' after property value in JSON at position 19","timestamp":"2024-03-30T10:37:01.245Z"}
{"level":"error","message":"Error Status: undefined, Message: 고민 등록 실패랜덤 답변자 선정 실패: 회원가입한 유저가 없습니다.","timestamp":"2024-03-30T14:21:33.134Z"}
