{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.findUnique()` invocation:\n\n{\n  where: {\n    worryId: \"46\"\n             ~~~~\n  },\n  select: {\n    worryId: true,\n    content: true,\n    createdAt: true,\n    icon: true,\n    userId: true,\n    comments: {\n      select: {\n        commentId: true,\n        content: true,\n        createdAt: true,\n        updatedAt: true,\n        parentId: true,\n        children: {\n          select: {\n            commentId: true,\n            content: true,\n            createdAt: true,\n            updatedAt: true,\n            parentId: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `worryId`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-03-29T15:50:24.522Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:30:32.136Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:30:37.050Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:30:42.925Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `solvingCommentId`","timestamp":"2024-03-29T17:30:57.190Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:32:42.003Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:32:45.585Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:32:49.877Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:33:22.144Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:38:29.538Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:39:39.166Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-29T17:40:29.586Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n{\n  where: {\n    worryId: 8\n  },\n  data: {\n    isSolved: true,\n    solvingCommentId: 9,\n    solvedByUserId: 1,\n    helperUserId: 3,\n+   user: {\n+     create: UsersCreateWithoutLikesInput | UsersUncheckedCreateWithoutLikesInput,\n+     connectOrCreate: UsersCreateOrConnectWithoutLikesInput,\n+     connect: UsersWhereUniqueInput\n+   }\n  },\n  select: {\n    worryId: true,\n    commentAuthorId: true,\n    content: true,\n    createdAt: true,\n    icon: true,\n    userId: true,\n    solvingCommentId: true\n  }\n}\n\nArgument `user` is missing.","timestamp":"2024-03-30T02:09:23.908Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T02:18:05.276Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T02:18:06.737Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `solvingCommentId`","timestamp":"2024-03-30T02:30:01.493Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n\nForeign key constraint failed on the field: `solvingCommentId`","timestamp":"2024-03-30T02:30:51.618Z"}
{"level":"error","message":"Error Status: 400, Message: 유효하지 않은 댓글입니다.","timestamp":"2024-03-30T02:42:39.798Z"}
{"level":"error","message":"Error Status: 400, Message: 유효하지 않은 댓글입니다.","timestamp":"2024-03-30T02:42:46.055Z"}
{"level":"error","message":"Error Status: undefined, Message: Failed to fetch comments: \nInvalid `prisma.comments.findFirst()` invocation:\n\n{\n  where: {\n+   commentId: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  select: {\n    worryId: true,\n    commentId: true,\n    content: true,\n    createdAt: true\n  }\n}\n\nArgument `commentId` is missing.","timestamp":"2024-03-30T03:20:00.475Z"}
{"level":"error","message":"Error Status: undefined, Message: Failed to fetch comments: Failed to fetch comments from repository: \nInvalid `prisma.worries.findMany()` invocation:\n\n{\n  where: {\n+   userId: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  select: {\n    worryId: true\n  }\n}\n\nArgument `userId` is missing.","timestamp":"2024-03-30T03:20:21.722Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T03:22:36.000Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T03:22:50.904Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T03:22:53.783Z"}
{"level":"error","message":"Error Status: 400, Message: 이미 선물이 전송되었습니다.","timestamp":"2024-03-30T04:31:36.533Z"}
{"level":"error","message":"Error Status: undefined, Message: \nInvalid `prisma.worries.update()` invocation:\n\n{\n  where: {\n    worryId: 49\n  },\n  data: {\n    isSolved: true,\n    solvingCommentId: 16,\n    ~~~~~~~~~~~~~~~~\n    solvedByUserId: 1,\n    helperUserId: 10,\n?   commentAuthorId?: Int | IntFieldUpdateOperationsInput,\n?   content?: String | StringFieldUpdateOperationsInput,\n?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n?   icon?: Icon | NullableEnumIconFieldUpdateOperationsInput | Null,\n?   lastReplyTime?: DateTime | NullableDateTimeFieldUpdateOperationsInput | Null,\n?   deletedAt?: DateTime | NullableDateTimeFieldUpdateOperationsInput | Null,\n?   user?: UsersUpdateOneWithoutSolvedWorriesNestedInput,\n?   helperUser?: UsersUpdateOneWithoutHelpedSolveWorriesNestedInput,\n?   comments?: CommentsUpdateManyWithoutWorryNestedInput,\n?   solvingComment?: CommentsUpdateOneWithoutSolvingWorryNestedInput\n  },\n  select: {\n    worryId: true,\n    commentAuthorId: true,\n    content: true,\n    createdAt: true,\n    icon: true,\n    userId: true,\n    solvingCommentId: true\n  }\n}\n\nUnknown argument `solvingCommentId`. Did you mean `solvingComment`? Available options are marked with ?.","timestamp":"2024-03-30T04:33:01.477Z"}
{"level":"error","message":"Error Status: undefined, Message: ReworryService is not defined","timestamp":"2024-03-30T07:03:00.555Z"}
{"level":"error","message":"Error Status: undefined, Message: ReworryService is not defined","timestamp":"2024-03-30T07:03:04.108Z"}
{"level":"error","message":"Error Status: undefined, Message: ReworryService is not defined","timestamp":"2024-03-30T07:04:10.113Z"}
{"level":"error","message":"Error Status: undefined, Message: 고민 등록 실패랜덤 답변자 선정 실패: 회원가입한 유저가 없습니다.","timestamp":"2024-03-30T07:38:42.157Z"}
{"level":"error","message":"Error Status: undefined, Message: 고민 등록 실패고민등록에 실패하였습니다. \nInvalid `prisma.worries.create()` invocation:\n\n{\n  data: {\n    content: \"concern\",\n    icon: \"B\",\n    userId: 1,\n    commentAuthorId: 2,\n+   commentId: Int\n  }\n}\n\nArgument `commentId` is missing.","timestamp":"2024-03-30T07:38:56.008Z"}
