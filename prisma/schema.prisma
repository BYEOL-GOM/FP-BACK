// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId   Int    @id @default(autoincrement())
  nickname String
  fruit    Int    @default(0)
  authorId  Int?  
  worries  Worries[]
  likes    Likes[]
}

model Worries {
  worryId     Int       @id @default(autoincrement())
  commentAuthorId    Int?       // 고민답변자 id
  content     String    @db.Text
  createdAt   DateTime  @default(now())
  icon        Icon?
  lastReplyTime DateTime?  //답변이 도착한 시간
  deletedAt          DateTime? // 소프트 삭제를 위한 


  userId      Int
  user        Users    @relation(fields: [userId], references: [userId], onDelete: Cascade)

  comments    Comments // 고민에 달린 댓글
  likes       Likes[]    // 고민에 달린 좋아요
}

enum Icon{
  A
  B
  C
  D
}

model Comments {
  commentId Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  worryId    Int   @unique
  worry      Worries  @relation(fields: [worryId], references: [worryId])
  
  likes      Likes[] // 댓글에 대한 좋아요들

}

model Likes {
  likeId    Int       @id @default(autoincrement())
  checkLike Boolean   @default(false)

  userId    Int
  user      Users     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  commentId Int
  comment   Comments  @relation(fields: [commentId], references: [commentId], onDelete: Cascade)

  worryId   Int
  worry     Worries   @relation(fields: [worryId], references: [worryId])
}
