name: Deploy on Push or Merge

on:
    push:
        branches:
            - dev
            - main

jobs:
    prettier-check:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - run: yarn install --force
            - run: yarn prettier:check

    build-and-push:
        runs-on: ubuntu-latest
        needs: prettier-check
        steps:
            - uses: actions/checkout@v3
            - uses: docker/setup-buildx-action@v2
            - uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  tags: leticia0408/byeol_gom:${{ github.ref == 'refs/heads/dev' && 'latest-dev' || 'latest-prod' }}

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - name: Setup environment variables
              run: |
                  if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
                    echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN_DEV }}" >> $GITHUB_ENV
                    echo "KAKAO_REDIRECT_URI=${{ secrets.DEV_KAKAO_REDIRECT_URI }}" >> $GITHUB_ENV
                    echo "DATABASE_URL=${{ secrets.DEV_DATABASE_URL }}" >> $GITHUB_ENV
                    echo "CONTAINER_NAME=my-app-dev" >> $GITHUB_ENV
                    echo "CONTAINER_PORT=${{ secrets.DEV_PORT }}" >> $GITHUB_ENV
                    echo "NAVER_REDIRECT_URI=${{ secrets.DEV_NAVER_REDIRECT_URI }}" >> $GITHUB_ENV
                  else
                    echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN_PROD }}" >> $GITHUB_ENV
                    echo "KAKAO_REDIRECT_URI=${{ secrets.PROD_KAKAO_REDIRECT_URI }}" >> $GITHUB_ENV
                    echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> $GITHUB_ENV
                    echo "CONTAINER_NAME=my-app-prod" >> $GITHUB_ENV
                    echo "NAVER_REDIRECT_URI=${{ secrets.NAVER_REDIRECT_URI }}" >> $GITHUB_ENV
                    echo "CONTAINER_PORT=${{ secrets.PROD_PORT }}" >> $GITHUB_ENV
                    echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
                  fi

            - name: Deploy Application and Handle Failure
              run: |
                  if ! docker run -d --name ${{ env.CONTAINER_NAME }} -p ${{ env.CONTAINER_PORT }}:3000 \
                    -e CORS_ORIGIN="${{ env.CORS_ORIGIN }}" \
                    -e KAKAO_REDIRECT_URI="${{ env.KAKAO_REDIRECT_URI }}" \
                    -e DATABASE_URL="${{ env.DATABASE_URL }}" \
                    -e KAKAO_REST_API_KEY="${{ secrets.KAKAO_REST_API_KEY }}" \
                    -e NAVER_REDIRECT_URI="${{ env.NAVER_REDIRECT_URI }}" \
                    -e NAVER_CLIENT_SECRET="${{ secrets.NAVER_CLIENT_SECRET }}" \
                    -e NAVER_REST_API_ID="${{ secrets.NAVER_REST_API_ID }}" \
                    -e SESSION_SECRET="${{ secrets.SESSION_SECRET }}" \
                    -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
                    -e ACCESS_TOKEN_SECRET="${{ secrets.ACCESS_TOKEN_SECRET }}" \
                    -e REFRESH_TOKEN_SECRET="${{ secrets.REFRESH_TOKEN_SECRET }}" \
                    -e ACCESS_TOKEN_LIFE="${{ secrets.ACCESS_TOKEN_LIFE }}" \
                    -e REFRESH_TOKEN_LIFE="${{ secrets.REFRESH_TOKEN_LIFE }}" \
                    -e CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}" \
                    -e SENTRY_DSN="${{ env.SENTRY_DSN }}" \
                    leticia0408/byeol_gom:${{ github.ref == 'refs/heads/dev' && 'latest-dev' || 'latest-prod' }}; then
                    echo "Deployment failed, notifying Slack and attempting rollback."
                    CURRENT_IMAGE=$(docker inspect --format='{{.Config.Image}}' ${{ env.CONTAINER_NAME }} || echo "")
                    docker run -d --name ${{ env.CONTAINER_NAME }} -p ${{ env.CONTAINER_PORT }}:3000 $CURRENT_IMAGE
                  else
                    echo "Deployment successful."
                  fi

            - name: Send Slack Notification on Deployment Failure
              if: failure() # Only run this step if the deployment step failed
              uses: 8398a7/action-slack@v3
              with:
                  status: custom
                  fields: repo,commit,author,action,eventName,ref,workflow
                  text: 'ðŸš¨ Deployment to ${GITHUB_REF} failed and rollback was initiated.'
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
