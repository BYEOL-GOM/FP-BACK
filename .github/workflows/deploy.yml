name: Deploy on dev Push or Merge

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - dev

jobs:
    independent-job:
    name: Independent Job
    runs-on: ubuntu-latest
    steps:
        - name: Print Message
          run: echo "This is an independent job"
    # prettier-check:
    #     name: Prettier Check
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v3
    #         - run: yarn install --force
    #         - run: yarn prettier:check

    build-and-push:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        needs: prettier-check
        steps:
            - uses: actions/checkout@v3
            - name: Setup Build Environment
              run: |
                  if [ "${{ github.event_name }}" == "pull_request" ]; then
                    echo "TAG=dev" >> $GITHUB_ENV
                    echo "BUILD_ENV=development" >> $GITHUB_ENV
                    echo "KAKAO_REDIRECT_URI=${{ secrets.PROD_KAKAO_REDIRECT_URI }}" >> $GITHUB_ENV
                  else
                    echo "TAG=latest" >> $GITHUB_ENV
                    echo "BUILD_ENV=production" >> $GITHUB_ENV
                    echo "KAKAO_REDIRECT_URI=${{ secrets.DEV_KAKAO_REDIRECT_URI }}" >> $GITHUB_ENV
                  fi
            - uses: docker/setup-buildx-action@v2
            - uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  tags: leticia0408/byeol_gom:${{ env.TAG }}
                  build-args: NODE_ENV=${{ env.BUILD_ENV }}

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - uses: appleboy/ssh-action@v0.1.6
              with:
                  host: ${{ secrets.REMOTE_IP }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_PRIVATE_KEY }}
                  port: ${{ secrets.REMOTE_SSH_PORT }}
                  script: |
                      docker system prune -a -f --volumes
                      echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
                      docker pull leticia0408/byeol_gom:${{ env.TAG }}
                      docker stop my-app || true
                      docker rm my-app || true
                      if [ "${{ github.event_name }}" == "pull_request" ]; then
                        KAKAO_REDIRECT_URI=${{ secrets.PROD_KAKAO_REDIRECT_URI }}
                      else
                        KAKAO_REDIRECT_URI=${{ secrets.DEV_KAKAO_REDIRECT_URI }}
                      fi
                      docker run -d --name my-app -p 3000:3000 \
                        -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
                        -e KAKAO_REST_API_KEY="${{ secrets.KAKAO_REST_API_KEY }}" \
                        -e KAKAO_REDIRECT_URI="$KAKAO_REDIRECT_URI" \
                        -e SESSION_SECRET="${{ secrets.SESSION_SECRET }}" \
                        -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
                        -e ACCESS_TOKEN_SECRET="${{ secrets.ACCESS_TOKEN_SECRET }}" \
                        -e REFRESH_TOKEN_SECRET="${{ secrets.REFRESH_TOKEN_SECRET }}" \
                        -e ACCESS_TOKEN_LIFE="${{ secrets.ACCESS_TOKEN_LIFE }}" \
                        -e REFRESH_TOKEN_LIFE="${{ secrets.REFRESH_TOKEN_LIFE }}" \
                        -e CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}" \
                        leticia0408/byeol_gom:${{ env.TAG }}
